# Generated by Django 3.2.11 on 2025-05-06 17:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_mail_verified', models.BooleanField(default=False, verbose_name='Is The Mail Verified')),
                ('email', models.EmailField(max_length=255, null=True, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('rental', 'Rental Request'), ('car_model', 'Car Model Request'), ('agency', 'Agency Registration')], max_length=20)),
                ('message', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('target_url', models.CharField(max_length=255)),
                ('reference_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'admin_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Agences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_name', models.CharField(max_length=4096, verbose_name='Agency Name')),
                ('commercial_name', models.CharField(blank=True, max_length=4096, null=True, verbose_name='Agency Name')),
                ('ceo_name', models.CharField(blank=True, max_length=4096, null=True, verbose_name='CEO Name')),
                ('ceo_phone_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='CEO Phone')),
                ('tax_number', models.CharField(max_length=150, unique=True, verbose_name='Tax registration Number')),
                ('adress_agency', models.CharField(max_length=4096, verbose_name='Address')),
                ('governorate', models.CharField(max_length=200, null=True, verbose_name='Governorate')),
                ('city', models.CharField(max_length=200, null=True, verbose_name='City')),
                ('delegation', models.CharField(max_length=200, null=True, verbose_name='Delegation')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(max_length=200, verbose_name='Phone')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('is_mail_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_auto', models.BooleanField(default=False, verbose_name='Auto Activate Cars')),
                ('auto_approve_rental', models.BooleanField(default=False, verbose_name='Auto Approve Rentals')),
                ('zipcode', models.CharField(max_length=150, null=True, verbose_name='CEO Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo')),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'db_table': 'agence',
            },
        ),
        migrations.CreateModel(
            name='Devise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('value', models.FloatField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('coefficient', models.FloatField(default=1)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('order_key', models.IntegerField(null=True)),
                ('unit', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order_key', models.IntegerField(null=True)),
                ('position', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'states',
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.devise', verbose_name='Devise')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'user_preference',
            },
        ),
        migrations.CreateModel(
            name='RightsAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4096, verbose_name='Field')),
                ('acess_id', models.IntegerField(blank=True, null=True)),
                ('access_type', models.CharField(blank=True, max_length=4096, null=True, verbose_name='Access Type')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'rights_access',
            },
        ),
        migrations.CreateModel(
            name='MailSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_date', models.DateTimeField(auto_now=True, verbose_name='Subscripted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('unsubscription_date', models.DateTimeField(blank=True, null=True, verbose_name='UnSubscripted At')),
                ('promo_value', models.FloatField(default=0, verbose_name='Promotion price')),
                ('is_promo_used', models.BooleanField(default=False, verbose_name='Is Promotion Used')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'mail_subscription',
            },
        ),
        migrations.CreateModel(
            name='Delegation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order_key', models.IntegerField(null=True)),
                ('position', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.state', verbose_name='State')),
            ],
            options={
                'db_table': 'delegation',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='User Name')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='User Phone')),
                ('subject', models.CharField(blank=True, max_length=255, null=True, verbose_name='Subject')),
                ('message', models.CharField(blank=True, max_length=255, null=True, verbose_name='Message')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('zipcode', models.IntegerField(null=True)),
                ('order_key', models.IntegerField(null=True)),
                ('position', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('delegation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.delegation', verbose_name='Delegation')),
            ],
            options={
                'verbose_name_plural': 'cities',
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='AgencyPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('view', 'View Cars'), ('add', 'Add Cars'), ('edit', 'Edit Cars'), ('delete', 'Delete Cars')], max_length=20)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.agences')),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'agency_permission',
                'unique_together': {('agency', 'user', 'permission')},
            },
        ),
    ]
